name: Build APK (Buildozer)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build-apk:
    runs-on: ubuntu-latest

    env:
      APP_DIR: "."
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_HOME: ${{ github.workspace }}/android-sdk

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Setup Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Deps de sistema
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git zip unzip curl \
            autoconf automake libtool pkg-config libffi-dev libssl-dev

      - name: Instalar Buildozer (+cython<3)
        run: |
          python -m pip install --upgrade pip
          pip install "cython<3.0" buildozer

      # ---------- Android SDK estável + licenças ----------
      - name: Baixar cmdline-tools do Android
        run: |
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -fsSL https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o cmdtools.zip
          unzip -q cmdtools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          rm cmdtools.zip
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH

      - name: Aceitar licenças e instalar API 35 + Build-Tools 35.0.0
        run: |
          yes | sdkmanager --licenses
          sdkmanager --update
          sdkmanager "platform-tools" "platforms;android-35" "build-tools;35.0.0" "ndk;26.1.10909125"
          sdkmanager --list | head -n 50
          ls -la "$ANDROID_SDK_ROOT/build-tools/35.0.0" || true
          which aidl || true

      # ---------- Ajustes no buildozer.spec para NÃO puxar 36/preview ----------
      - name: Fixar API/NDK e SDK path no buildozer.spec
        working-directory: ${{ env.APP_DIR }}
        run: |
          if [ ! -f buildozer.spec ]; then
            echo "ERRO: buildozer.spec não encontrado"; exit 2
          fi
          # API/NDK estáveis
          grep -q '^android.api' buildozer.spec && sed -i 's/^android\.api\s*=.*/android.api = 35/' buildozer.spec || echo 'android.api = 35' >> buildozer.spec
          grep -q '^android.minapi' buildozer.spec && sed -i 's/^android\.minapi\s*=.*/android.minapi = 23/' buildozer.spec || echo 'android.minapi = 23' >> buildozer.spec
          grep -q '^android.ndk' buildozer.spec && sed -i 's/^android\.ndk\s*=.*/android.ndk = 26b/' buildozer.spec || echo 'android.ndk = 26b' >> buildozer.spec
          # Força o Buildozer a usar ESTE SDK (não baixar outro)
          if grep -q '^android.sdk_path' buildozer.spec; then
            sed -i 's#^android\.sdk_path\s*=.*#android.sdk_path = '"${{ github.workspace }}"'/android-sdk#' buildozer.spec
          else
            echo 'android.sdk_path = '"${{ github.workspace }}"'/android-sdk' >> buildozer.spec
          fi
          # Apenas arm64 para acelerar (edite se quiser v7a também)
          if grep -q '^archs' buildozer.spec; then
            sed -i 's/^archs.*/archs = arm64-v8a/' buildozer.spec
          else
            echo 'archs = arm64-v8a' >> buildozer.spec
          fi
          echo "Resumo buildozer.spec:"
          grep -E '^(android\.sdk_path|android\.api|android\.minapi|android\.ndk|archs)' buildozer.spec

      # ---------- Limpa caches do Buildozer que possam carregar 36.x ----------
      - name: Limpar caches anteriores do Buildozer
        run: |
          rm -rf ~/.buildozer
          rm -rf .buildozer

      - name: Build (APK debug)
        working-directory: ${{ env.APP_DIR }}
        env:
          ANDROIDSDK: ${{ env.ANDROID_SDK_ROOT }}
          ANDROIDNDK: ${{ env.ANDROID_SDK_ROOT }}/ndk/26.1.10909125
          CI: "1"
        run: |
          buildozer -v android debug

      - name: Publicar APK
        uses: actions/upload-artifact@v4
        with:
          name: app-apk
          path: ${{ env.APP_DIR }}/bin/*.apk
          if-no-files-found: warn
